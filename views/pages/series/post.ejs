<style>
    .btn.create {
        position: absolute;
        left: 100px;
    }

    .modal-series {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba(0, 0, 0, 0.6);
        z-index: 4;
        justify-content: center;
        align-items: center;
    }

    .modal-series.active {
        display: flex;
    }

    .dark-mode .modal-content {
        padding: 2rem;
        border-radius: 8px;
        width: 90%;
        max-width: 500px;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
        background-color: #1f1f1f89;
        border-radius: 10px;
        color: #f0f0f0;
        box-shadow: 0 4px 12px rgb(255, 255, 255);
        padding: 20px 10px 10px 10px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        transform-style: preserve-3d;
        transition: 1s;
    }

    .light-mode .modal-content {
        padding: 2rem;
        border-radius: 8px;
        width: 90%;
        max-width: 500px;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
        background-color: #e9e9e989;
        border-radius: 10px;
        color: #f0f0f0;
        box-shadow: 0 4px 12px rgb(0, 0, 0);
        padding: 20px 10px 10px 10px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        transform-style: preserve-3d;
        transition: 1s;
    }

    .post-series {
        margin-top: 30px !important;
    }

    .modal-close {
        position: absolute;
        top: 20px;
        right: 30px;
        font-size: 2rem;
        color: white;
        cursor: pointer;
    }

    .light-mode .post-header {
        color: #000000;
        position: absolute;
        top: -15px;
        left: 20px;
        background-color: #ffffff;
        width: 150px;
        padding: 6px 0;
        text-align: center;
        font-weight: 500;
        border-radius: 5px;
        backdrop-filter: blur(3px);
        border: 1px solid #e0e0e0;
        box-shadow: 0 -2px 12px rgba(0, 0, 0, 0.1);
        z-index: 1;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        transform-style: preserve-3d;
    }

    .light-mode input {
        width: 90%;
        padding: 10px 12px;
        border: none;
        border-radius: 5px;
        background-color: #f0f0f0;
        color: #000000;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        outline: none;
        font-size: 1rem;
    }

    .light-mode input::placeholder {
        color: #777777;
        font-size: 0.9rem;
        font-style: italic;
        font-weight: 300;
        opacity: 0.8;
    }

    .light-mode input:focus {
        transform: translateY(-4px) rotateX(3deg);
        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
        background-color: #e6e6e6;
    }

    .dark-mode .post-header {
        position: absolute;
        top: -15px;
        left: 20px;
        background-color: #1F1F1F;
        width: 150px;
        padding: 6px 0;
        text-align: center;
        font-weight: 500;
        border-radius: 5px;
        backdrop-filter: blur(3px);
        border: 1px solid #1F1F1F;
        box-shadow: 0 -2px 12px rgb(255, 255, 255);
        z-index: 1;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        transform-style: preserve-3d;
    }

    .dark-mode input {
        width: 90%;
        padding: 10px 12px;
        border: none;
        border-radius: 5px;
        background-color: #1F1F1F;
        color: #f0f0f0;
        box-shadow: 0 2px 10px rgba(255, 255, 255, 0.2);
        transition: all 0.3s ease;
        outline: none;
        font-size: 1rem;
    }

    .dark-mode input::placeholder {
        color: #bbbbbb;
        font-size: 0.9rem;
        font-style: italic;
        font-weight: 300;
        opacity: 0.8;
    }

    .dark-mode input:focus {
        transform: translateY(-4px) rotateX(3deg);
        box-shadow: 0 4px 16px rgba(255, 255, 255, 0.4);
        background-color: #222;
    }

    .series-input {
        margin-bottom: 20px;
    }

    .toggle-wrapper-input {
        display: flex;
        align-items: center;
        margin-top: 10px;
        padding-left: 5px;
    }

    .toggle-label-input {
        position: relative;
        display: inline-flex;
        align-items: center;
        cursor: pointer;
        font-size: 1rem;
        user-select: none;
        gap: 12px;
    }

    .toggle-label-input input {
        opacity: 0;
        width: 0;
        height: 0;
    }

    .slider-input {
        position: relative;
        width: 45px;
        height: 24px;
        background-color: #ccc;
        border-radius: 50px;
        transition: 0.4s;
    }

    .slider-input::before {
        content: "";
        position: absolute;
        height: 18px;
        width: 18px;
        left: 3px;
        bottom: 3px;
        background-color: white;
        transition: 0.4s;
        border-radius: 50%;
    }

    .toggle-label-input input:checked+.slider-input {
        background-color: #2bd4c0;
    }

    .toggle-label-input input:checked+.slider-input::before {
        transform: translateX(20px);
    }

    .label-text {
        font-weight: 500;
        font-size: 0.95rem;
    }
</style>

<button class="btn create">Create Series</button>

<section class="modal-series" id="modal">
    <div class="modal-close" id="closeBtn">&times;</div>
    <div class="modal-content">
        <p class="post-header">Create New Series</p>
        <form id="post-series" class="post-series">
            <input class="series-input" name="title" type="text" placeholder="Series title" autocomplete="off" />
            <input class="series-input" name="description" type="text" placeholder="Short Description"
                autocomplete="off" />
            <div class="toggle-wrapper-input">
                <label class="toggle-label-input">
                    <input type="checkbox" name="private" id="privateToggle" />
                    <span class="slider-input"></span>
                    <span class="label-text">Privacy</span>
                </label>
            </div>

            <br><br>
            <button type="submit" class="btn">Submit</button>
        </form>

    </div>
</section>

<script>
    const createBtn = document.querySelector('.btn.create');
    const modal = document.getElementById('modal');
    const closeBtn = document.getElementById('closeBtn');
    const form = document.getElementById('post-series');

    createBtn.addEventListener('click', () => {
        modal.classList.add('active');
    });

    closeBtn.addEventListener('click', () => {
        modal.classList.remove('active');
    });

    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.classList.remove('active');
        }
    });

    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        try {

            const inputs = form.querySelectorAll('input.series-input');
            const [title, description] = [...inputs].map(input => input.value.trim());
            const isPrivate = form.querySelector('#privateToggle').checked;

            if (!title || !description) {
                throw { message: "Field must be completed" }
            }
            const response = await fetch(`${baseUrl}/api/series`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    title,
                    description,
                    isPrivate: isPrivate
                })
            });

            const result = await response.json()
            if (response.ok) {
                await infoModal({ time: 3000, message: result.message, icons: "fa-solid fa-check fa-beat-fade", color: "#63E6BE" })
                await form.reset();
                window.location.reload()
            } else {
                throw { message: result.message }
            }
        } catch (error) {
            await infoModal({
                time: 5000,
                message: error.message || "Something went wrong",
                icons: "fa-solid fa-triangle-exclamation fa-beat-fade",
                color: "#ff3d3d",
            })
        }
    });
</script>